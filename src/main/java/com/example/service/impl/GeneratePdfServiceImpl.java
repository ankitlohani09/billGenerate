package com.example.service.impl;

import com.example.entity.Quotation;
import com.example.repository.QuotationRepository;
import com.example.service.GeneratePdfService;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;

import org.springframework.stereotype.Service;

import java.io.ByteArrayOutputStream;
import java.util.Optional;

@Service
public class GeneratePdfServiceImpl implements GeneratePdfService {

    private final QuotationRepository quotationRepository;

    public GeneratePdfServiceImpl(QuotationRepository quotationRepository) {
        this.quotationRepository = quotationRepository;
    }

    public byte[] generatePdfForQuotation(Long quotationId) throws DocumentException {
        Optional<Quotation> quotationOptional = quotationRepository.findById(quotationId);
        Quotation quotation = new Quotation();

        if (quotationOptional.isPresent()) {
            quotation = quotationOptional.get();
        }

        // PDF Setup
        Document document = new Document();
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        PdfWriter.getInstance(document, outputStream);
        document.open();

        // Custom Fonts
        Font titleFont = new Font(Font.FontFamily.HELVETICA, 20, Font.BOLD, BaseColor.BLUE);
        Font headerFont = new Font(Font.FontFamily.HELVETICA, 14, Font.BOLD, BaseColor.BLACK);
        Font boldFont = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD, BaseColor.BLACK);
        Font normalFont = new Font(Font.FontFamily.HELVETICA, 12, Font.NORMAL, BaseColor.BLACK);

        // Add Logo
        addImage(document, "C:/Users/aloha/Downloads/billGenerateProject/src/main/resources/static/image/LogoImg.png", 150, 80, Element.ALIGN_RIGHT);

        // Title Section
        addParagraph(document, "RADHIKA ENTERPRISES", titleFont, Element.ALIGN_CENTER, 10);
        addParagraph(document, "HEADING TOWARDS HEALTHIER EARTH", normalFont, Element.ALIGN_CENTER, 20);

        // Add Hotel Image
        addImage(document, "C:/Users/aloha/Downloads/billGenerateProject/src/main/resources/static/image/HotelImg.png", 350, 200, Element.ALIGN_CENTER);

        // Contact Information
        addParagraph(document, "E-Mail:  sanjayboriya13@gmail.com | Contact: 9993957179\n" +
                        "Address: Radhika Hotel Dewas Naka Indore M.P.\nGST Registration Number: 23APSPB8959G2ZG",
                boldFont, Element.ALIGN_LEFT, 15);

        addMultipleNewLines(document, 2);

        // Quotation Details Table
        Paragraph paragraph = new Paragraph("QUOTATION â€“ " + quotationId, headerFont);
        paragraph.setAlignment(Element.ALIGN_CENTER);
        document.add(paragraph);
        addMultipleNewLines(document, 2);
        document.add(new Paragraph("NAME: " + quotation.getName(), boldFont));
        document.add(new Paragraph("MOB NO: " + quotation.getMobileNo(), boldFont));
        document.add(new Paragraph("DATE: " + quotation.getDate(), boldFont));
        document.add(new Paragraph("ADD: " + quotation.getAddress(), boldFont));

        // Adding the detailed text in the document
        addMultipleNewLines(document, 3);
        document.add(new Paragraph("Sub: Quotation for 3 KW on grid solar system on Erection procurement and commissioning basis", normalFont));
        document.add(Chunk.NEWLINE); // New line for readability
        addParagraph(document, "Thank you for selecting RADHIKA. Our company has provided ROOF TOP SOLAR SOLUTION and has built a reputation of integrity and efficiency.", normalFont, Element.ALIGN_LEFT, 0);
        addParagraph(document, "Our team has many years of experience and we are dedicated to providing you with the most up-to-date service possible.", normalFont, Element.ALIGN_LEFT, 0);
        addParagraph(document, "We are pleased to welcome you as a new RADHIKA family member. We feel honored that you have chosen us to fulfill your solar energy requirement, your complete satisfaction is our first priority! And look forward to serving you.", normalFont, Element.ALIGN_LEFT, 0);
        addParagraph(document, "Project Description:", boldFont, Element.ALIGN_LEFT, 10); // Project Description heading
        addParagraph(document, "A grid-tied solar system is an interactive grid system where electricity generated by solar energy is used by the load and the excess energy is fed back to the grid.", normalFont, Element.ALIGN_LEFT, 0);
        addParagraph(document, "It uses a grid-tie interactive inverter that converts the direct current from the panels to alternating current to be used by the loads or transferred to the grid.", normalFont, Element.ALIGN_LEFT, 0);
        addParagraph(document, "This project will include the installation of the solar system consisting of rooftop mounting of Solar PV modules with mounting accessories, Net Meter, and MPPT solar grid-tie inverter.", normalFont, Element.ALIGN_LEFT, 0);

        addMultipleNewLines(document, 1);
        // Proposed Site Table
        PdfPTable proposedSiteTable = createTable(2);
        proposedSiteTable.setWidthPercentage(100);
        proposedSiteTable.setSpacingBefore(10f);

        // Add the header cell that spans two columns
        addColspanHeader(proposedSiteTable, "Proposed Site", boldFont);
        // Adding remaining cells with border directly
        addTableCellWithBorder(proposedSiteTable, "Name: ", boldFont);
        addTableCellWithBorder(proposedSiteTable, quotation.getProposedSiteName(), normalFont);
        addTableCellWithBorder(proposedSiteTable, "Location: ", boldFont);
        addTableCellWithBorder(proposedSiteTable, quotation.getLocation(), normalFont);
        document.add(proposedSiteTable);

        // Solar PV Specification Table
        PdfPTable solarTable = createTable(2);
        addColspanHeader(solarTable, "Solar PV System Specification: On-Grid Rooftop", boldFont);
        addTableCellWithBorder(solarTable, "Plant Capacity: ", boldFont);
        addTableCellWithBorder(solarTable, quotation.getPlantCapacity(), normalFont);
        addTableCellWithBorder(solarTable, "Module Technology: ", boldFont);
        addTableCellWithBorder(solarTable, quotation.getModuleTechnology(), normalFont);
        addTableCellWithBorder(solarTable, "Mounting Structure Technology: ", boldFont);
        addTableCellWithBorder(solarTable, quotation.getMountingStructureTechnology(), normalFont);
        addTableCellWithBorder(solarTable, "Project Scheme: ", boldFont);
        addTableCellWithBorder(solarTable, quotation.getProjectScheme(), normalFont);
        addTableCellWithBorder(solarTable, "Power Evacuation: ", boldFont);
        addTableCellWithBorder(solarTable, quotation.getPowerEvacuation(), normalFont);
        addTableCellWithBorder(solarTable, "Solar Plant Output Connection: ", boldFont);
        addTableCellWithBorder(solarTable, quotation.getSolarPlantOutputConnection(), normalFont);
        addTableCellWithBorder(solarTable, "Approx. Area: ", boldFont);
        addTableCellWithBorder(solarTable, quotation.getApproxArea(), normalFont);
        addTableCellWithBorder(solarTable, "Scheme: ", boldFont);
        addTableCellWithBorder(solarTable, quotation.getScheme(), normalFont);
        document.add(solarTable);

        // Proposal Bases Inquiry Table
        PdfPTable inquiryTable = createTable(2);
        addColspanHeader(inquiryTable, "Proposal Bases Inquiry Received", boldFont);
        addTableCellWithBorder(inquiryTable, "From: ", boldFont);
        addTableCellWithBorder(inquiryTable, quotation.getInquiryReceivedFrom(), normalFont);
        addTableCellWithBorder(inquiryTable, "Date: ", boldFont);
        addTableCellWithBorder(inquiryTable, String.valueOf(quotation.getProposalBasesInquiryReceivedDate()), normalFont);
        addTableCellWithBorder(inquiryTable, "Offer Validity: ", boldFont);
        addTableCellWithBorder(inquiryTable, quotation.getOfferValidity(), normalFont);
        document.add(inquiryTable);

        addMultipleNewLines(document, 1);

        addParagraph(document, "Technical Specifications and BOM FOR 03 KW SOLAR POWER PLANT:", boldFont, Element.ALIGN_CENTER, 15);
        // Technical Specifications Table
        PdfPTable technicalSpecificationsTable = createTable(6);

        addTableCellWithBorder(technicalSpecificationsTable, "S No.", boldFont);
        addTableCellWithBorder(technicalSpecificationsTable, "Component", boldFont);
        addTableCellWithBorder(technicalSpecificationsTable, "Specification", boldFont);
        addTableCellWithBorder(technicalSpecificationsTable, "Make", boldFont);
        addTableCellWithBorder(technicalSpecificationsTable, "Z", boldFont);
        addTableCellWithBorder(technicalSpecificationsTable, "Quantity", boldFont);
        technicalSpecificationsTable.setWidthPercentage(100);

        // Add rows to the technical specifications table
        addTableCellWithBorder(technicalSpecificationsTable, "1", normalFont);  // S No.
        addTableCellWithBorder(technicalSpecificationsTable, "Solar PV Module", normalFont);  // Component
        addTableCellWithBorder(technicalSpecificationsTable, "Mono or Polycrystalline", normalFont);  // Specification
        addTableCellWithBorder(technicalSpecificationsTable, "XYZ Solar Co.", normalFont);  // Make
        addTableCellWithBorder(technicalSpecificationsTable, "Module Efficiency: 18-20%", normalFont);  // Z (optional, custom info like efficiency)
        addTableCellWithBorder(technicalSpecificationsTable, "10", normalFont);  // Quantity

        // Additional rows as per requirement
        document.add(technicalSpecificationsTable);

        addMultipleNewLines(document, 2);
        addParagraph(document, "As per your requirements we are sending you the quotation for ON-grid Solar Power Project.\n" +
                "Kindly find the details below:", normalFont, Element.ALIGN_LEFT, 10);

        addParagraph(document, "PLANT SIZE", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Total Amount Payable", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "PRICES â€“ 3 KW ON GRID POWER PLANT: 1,90,000/-", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Direct Subsidy Benefit in consumer account after commissioning of solar power plant: RS. 78,000/-", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "SUBSIDY AS PER GOVT. GUIDELINE (MNRE): RS . 78,000/- IN 45-90 DAYS OF COMPLETION", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "SUBSIDY WILL BE CREDITED TO CUSTOMERâ€™S ACCOUNT", normalFont, Element.ALIGN_LEFT, 10);

        addMultipleNewLines(document, 1);

        addParagraph(document, "SCOPE OF WORK", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Solar Modules â€“ as per IEC specs. Design, Manufacture & Supply of Solar power system as per specification & BOM given in our offer", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Installation & Commissioning of Solar Power Plant up to LT Panel including Synchronization with Grid. SUPPLY AND CIVIL FOUNDATION WORK FOR MODULE MOUNTING STRUCTURE, IF ANY.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Project Management. Providing after-sales service during warranty period from the date of installation. To carry out all the processes as per MNRE guidelines. To undertake further AMC if required by the customer at mutually agreed cost.", normalFont, Element.ALIGN_LEFT, 10);

        addParagraph(document, "SCOPE OF SUPPLY (FACILITIES)", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "There will be no open wire and all the electrical wires & cable will run through the conduits.", normalFont, Element.ALIGN_LEFT, 10);

        // Add GENERAL SAFETY, COMMUNICATION AND PROCESSES section
        addParagraph(document, "GENERAL SAFETY, COMMUNICATION AND PROCESSES:", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "We will meet and adhere to meeting the General, Safety, Communication and Processes.", normalFont, Element.ALIGN_LEFT, 10);

        // Add SPECIFIC REQUIREMENTS section
        addParagraph(document, "SPECIFIC REQUIREMENTS â€“ Compliance with Relevant Standards, Professional Accreditations:", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "All systems, components and equipment will comply with, and be designed and installed in accordance with, all relevant MNRE guideline.", normalFont, Element.ALIGN_LEFT, 10);

        // Add MAINTENANCE section
        addParagraph(document, "MAINTENANCE:", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "As such no major maintenance is required as there is no moving part. However, regular cleaning of the solar panels advised and general check of the inverters and other electric equipmentâ€™s is advised once a year. For 5 Years.", normalFont, Element.ALIGN_LEFT, 10);

        // Add Client Scope section
        addParagraph(document, "Client Scope:", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Providing shadow free area on roof/ground on roof.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Construction power, construction water etc.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Switch-yard and transformers and safety structures if needed.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Providing proper ventilated room for installation of PCU and other electronic items.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Providing safe storage place for material during installation commissioning period.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Providing water and temporary electricity connection during execution.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Load Increment if any.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Changing of service cable if demanded by MPEB officer.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Providing Wi-Fi range till inverter.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Expenses related to name change in electricity bill.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Any charges imposed by state dis com ISPL and client will discuss same and resolve it mutually.", normalFont, Element.ALIGN_LEFT, 10);

        // Add Terms and Conditions
        addParagraph(document, "Terms & Conditions:", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Payment Terms â€“ 25% Advance against purchase order, 75% Before material dispatch.", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Documents Required â€“", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Self-attested documents required as per below list \n", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "- Latest Electricity Bill", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "- Copy Pan Card (Clear)", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "- Aadhar Card", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "- Passport Size Photo", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "- Ownership Document / Registry (Nagar Nigam Property Tax Receipt)\n" +
                "SLD to be signed by customer (SLD will be provided by us) ", normalFont, Element.ALIGN_LEFT, 10);

        // Add Warranty details
        addParagraph(document, "Warranty:", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Solar Modules: 25 YEARS AS PROVIDED BY THE MANUFACTURER", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Solar Inverter: 8/10 YEARS AS PROVIDED BY THE MANUFACTURER", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "Force Majeure Offer is subject to force majeure by which it means cause beyond our reasonable control such as " +
                "war invasion, civil disobedience, government orders or restrictions, strikes, lockouts, riots, fire, materials wagons, " +
                "shipping space or any other earthquakes, floods, accident, breakdown of machinery, delay or inability to obtain " +
                "labor, raw material, causes whatsoever beyond our reasonable control, affecting us or our subcontractors, " +
                "suppliers. ", normalFont, Element.ALIGN_LEFT, 10);

        addMultipleNewLines(document,5);
        // Add Bank Details
        addParagraph(document, "RADHIKA ENTERPRISES", boldFont, Element.ALIGN_CENTER, 10);
        addParagraph(document, "ACCOUNT DETAILS -", boldFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "A/C HOLDER NAME: RADHIKA ENTERPRISES", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "BANK NAME: YES BANK", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "A/C No.: 076263400001691", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "IFSC CODE: YESB0000762", normalFont, Element.ALIGN_LEFT, 10);
        addParagraph(document, "VIJAY NAGAR INDORE 452001", normalFont, Element.ALIGN_LEFT, 20);

        addMultipleNewLines(document,3);
        // Add Contact Details
        addParagraph(document, "RADHIKA ENTERPRISES", boldFont, Element.ALIGN_CENTER, 0);
        addParagraph(document, "GSTIN 23APSPB8959G2ZG", normalFont, Element.ALIGN_CENTER, 20);
        // Adding owner details to the document
        String ownerDetails = getOwnerDetails("SANJAY BORIYA", "9993957179", "sanjayboriya13@gmail.com");
        addParagraph(document, ownerDetails, normalFont, Element.ALIGN_CENTER, 10);
        addMultipleNewLines(document, 1);

        document.close();
        return outputStream.toByteArray();
    }

    // Method to generate formatted owner details
    private String getOwnerDetails(String name, String contact, String email) {
        return String.format("""
            Name: %s
            Contact: %s
            Email: %s
            """, name, contact, email);
    }

    private void addParagraph(Document document, String text, Font font, int alignment, float spacingAfter) throws DocumentException {
        Paragraph paragraph = new Paragraph(text, font);
        paragraph.setAlignment(alignment);
        paragraph.setSpacingAfter(spacingAfter);
        document.add(paragraph);
    }

    private void addImage(Document document, String path, float width, float height, int alignment) {
        try {
            Image image = Image.getInstance(path);
            image.scaleAbsolute(width, height);
            image.setAlignment(alignment);
            document.add(image);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private PdfPTable createTable(int numColumns) {
        PdfPTable table = new PdfPTable(numColumns);
        table.setWidthPercentage(100);
        table.setPaddingTop(10);
        return table;
    }

    private void addColspanHeader(PdfPTable table, String text, Font font) {
        PdfPCell cell = new PdfPCell(new Phrase(text, font));
        cell.setColspan(table.getNumberOfColumns());
        cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
        cell.setPadding(10);
        table.addCell(cell);
    }

    private void addTableCellWithBorder(PdfPTable table, String text, Font font) {
        PdfPCell cell = new PdfPCell(new Phrase(text, font));
        cell.setBorder(Rectangle.BOX);
        cell.setPadding(10);
        table.addCell(cell);
        table.setSpacingAfter(15);
    }

    private void addMultipleNewLines(Document document, int count) throws DocumentException {
        for (int i = 0; i < count; i++) {
            document.add(new Paragraph(" "));
        }
    }
}
